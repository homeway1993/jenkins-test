pipeline {
  agent any
  parameters {
    string(name: 'SERVICE', defaultValue: 'oc-shopping-list')
    string(name: 'ENVIRONMENT', defaultValue: 'develop')
    string(name: 'BRANCH', defaultValue: 'omni-channel-phase1')
  }
//  environment {
//    SERVICE = 'oc-shopping-list'
//    ENVIRONMENT = 'develop'
//    BRANCH = 'omni-channel-phase1'
//  }
  options {
    disableConcurrentBuilds()
  }
  triggers {
    pollSCM('* * * * *')
  }
  stages {
    stage('Checkout') {
      steps {
        checkout([
          $class: 'SubversionSCM',
          additionalCredentials: [],
          excludedCommitMessages: '',
          excludedRegions: '',
          excludedRevprop: '',
          excludedUsers: '',
          filterChangelog: false,
          ignoreDirPropChanges: false,
          includedRegions: '',
          locations: [
            [
              remote: "https://svn.chowsangsang.com/repos/uat/oc_storefront/microservice/${SERVICE}/${ENVIRONMENT}/${BRANCH}",
              local: "microservice/${SERVICE}",
              depthOption: 'infinity',
              credentialsId: 'css_svn',
              ignoreExternalsOption: true,
              cancelProcessOnExternalsFail: true,
            ]
          ]
        ])
      }
    }
    stage('Integration Test') {
      steps {
        sh "docker rm -f eshop_json_server || true"
        sh "docker create --name eshop_json_server -p 36880:80 clue/json-server"
        dir("microservice/${SERVICE}/integration-test/json-server-data/") {
          sh "docker cp 'db.json' 'eshop_json_server:/data/db.json'"
          sh "docker cp 'json-server.json' 'eshop_json_server:/data/json-server.json'"
          sh "docker cp 'middleware-1.js' 'eshop_json_server:/data/middleware-1.js'"
          sh "docker cp 'routes.json' 'eshop_json_server:/data/routes.json'"
        }
        sh "docker start eshop_json_server"

        sh "docker rm -f mongodb-${SERVICE}-ci || true"
        sh "docker run --name mongodb-${SERVICE}-ci -e NLS_LANG=.AL32UTF8 -d -p 27017:27017 mongo &> /dev/null"
        sh "sleep 5"
        dir("microservice/${SERVICE}/integration-test/init-db-scripts/") {
          sh "docker cp mongo_data.js mongodb-${SERVICE}-ci:mongo_data.js"
          sh "docker exec mongodb-${SERVICE}-ci mongo mongo_data.js"
        }
      }
    }
  }
  post {
    always {
      sh "docker rm -f eshop_json_server || true"
    }
  }
}